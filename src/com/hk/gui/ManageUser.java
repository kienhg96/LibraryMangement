/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hk.gui;

import com.hk.authenticate.AdminsAuth;
import com.hk.objs.Users;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hoangkien
 */
public class ManageUser extends javax.swing.JFrame {

    private ArrayList<Users> listUser;
    private DefaultTableModel model;
    private DateFormat df = new SimpleDateFormat("dd-MM-yyyy");

    /**
     * Creates new form ManageUser
     */
    public ManageUser() {

        AdminsAuth.login("admin", "admin");
        initComponents();

        model = (DefaultTableModel) this.tbUser.getModel();
        listUser = Users.getAllUser();
        for (Users user : listUser) {
            model.addRow(new Object[]{user.getUsername(), user.getFullname(),
                df.format(user.getBirthday()), user.getAddress(),
                user.getPhone(), df.format(user.getExpirationDate())});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbUser = new javax.swing.JTable();
        btnAddUser = new javax.swing.JButton();
        btnEditUser = new javax.swing.JButton();
        btnDeleteUser = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Reader");

        tbUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Fullname", "Birthday", "Address", "Phone Number", "Expiration Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbUser);

        btnAddUser.setText("Add User");
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        btnEditUser.setText("Edit User");
        btnEditUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditUserActionPerformed(evt);
            }
        });

        btnDeleteUser.setText("Delete User");
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        jLabel1.setText("Filter by Username");

        jLabel2.setText("Filter by Fullname");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddUser)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditUser)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteUser))
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddUser)
                    .addComponent(btnEditUser)
                    .addComponent(btnDeleteUser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
        DialogUser dialog = new DialogUser(this, true);
        dialog.setUserList(listUser);
        dialog.setVisible(true);
        if (dialog.isModify()) {
            String username = dialog.getUsername();
            String password = dialog.getPassword();
            String fullname = dialog.getFullname();
            Date birthday = dialog.getBirthDay();
            String address = dialog.getAddress();
            String phone = dialog.getPhone();
            Date expirationDate = dialog.getExpirationDate();
            boolean flag = true;
            for (Users item : this.listUser) {
                if (item.getUsername().equals(username)) {
                    flag = false;
                    break;
                }
            }
            if (flag) {
                Users user = new Users(username, password, fullname, birthday,
                        address, phone, expirationDate);
                if (user.save()) {
                    JOptionPane.showMessageDialog(this, "Register successful");
                    this.listUser.add(user);
                    model.addRow(new Object[]{user.getUsername(), user.getFullname(),
                        df.format(user.getBirthday()), user.getAddress(),
                        user.getPhone(), df.format(user.getExpirationDate())});
                } else {
                    JOptionPane.showMessageDialog(this, "You do not have permission to create new account");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Username exist!");
            }
        }
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void btnEditUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditUserActionPerformed
        int selectedRow = this.tbUser.getSelectedRow();
        if (selectedRow != -1) {
            String username = (String) this.tbUser.getValueAt(selectedRow, 0);
            Users user = null;
            for (int i = 0; i < this.listUser.size(); i++) {
                if (this.listUser.get(i).getUsername().equals(username)) {
                    user = this.listUser.get(i);
                    break;
                }
            }
            DialogUser dialog = new DialogUser(this, true);
            dialog.setValues(username, user.getPassword(), user.getFullname(),
                    user.getBirthday(), user.getAddress(), user.getPhone(),
                    user.getExpirationDate());
            dialog.disableUsername();
            dialog.setVisible(true);
            if (dialog.isModify()) {
                String password = dialog.getPassword();
                String fullname = dialog.getFullname();
                Date birthday = dialog.getBirthDay();
                String address = dialog.getAddress();
                String phone = dialog.getPhone();
                Date expirationDate = dialog.getExpirationDate();
                if (!password.equals(user.getPassword())) {
                    user.setPassword(password);
                }
                user.setFullname(fullname);
                user.setBirthday(birthday);
                user.setAddress(address);
                user.setPhone(phone);
                user.setExpirationDate(expirationDate);
                if (user.save()) {
                    this.model.setValueAt(fullname, selectedRow, 1);
                    this.model.setValueAt(df.format(birthday), selectedRow, 2);
                    this.model.setValueAt(address, selectedRow, 3);
                    this.model.setValueAt(phone, selectedRow, 4);
                    this.model.setValueAt(df.format(expirationDate), selectedRow, 5);
                } else {
                    JOptionPane.showMessageDialog(this, "You do not have permission to save user");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "You must choose one user");
        }
    }//GEN-LAST:event_btnEditUserActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        int selectedRow = this.tbUser.getSelectedRow();
        String username = (String) this.tbUser.getValueAt(selectedRow, 0);
        int result = JOptionPane.showConfirmDialog(this, "Are you sure want to remove "
                + this.tbUser.getValueAt(selectedRow, 0));
        if (result == JOptionPane.YES_OPTION) {
            for (Users user : this.listUser) {
                if (user.getUsername().equals(username)) {
                    if (user.delete()) {
                        this.model.removeRow(selectedRow);
                    }
                    break;
                }
            }
        }
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnEditUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbUser;
    // End of variables declaration//GEN-END:variables
}
